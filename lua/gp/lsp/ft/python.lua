return {
	template = "def gp_probe():\n  \n",
    suffixes = { ". " },
	root_ignore = {
		Class = {
			ArithmeticError = "",
			AssertionError = "",
			AttributeError = "",
			BaseException = "",
			BaseExceptionGroup = "",
			BlockingIOError = "",
			BrokenPipeError = "",
			BufferError = "",
			BytesWarning = "",
			ChildProcessError = "",
			ConnectionAbortedError = "",
			ConnectionError = "",
			ConnectionRefusedError = "",
			ConnectionResetError = "",
			DeprecationWarning = "",
			EOFError = "",
			EncodingWarning = "",
			Exception = "",
			ExceptionGroup = "",
			FileExistsError = "",
			FileNotFoundError = "",
			FloatingPointError = "",
			FutureWarning = "",
			GeneratorExit = "",
			ImportError = "",
			ImportWarning = "",
			IndentationError = "",
			IndexError = "",
			InterruptedError = "",
			IsADirectoryError = "",
			KeyError = "",
			KeyboardInterrupt = "",
			LookupError = "",
			MemoryError = "",
			ModuleNotFoundError = "",
			NameError = "",
			NotADirectoryError = "",
			NotImplementedError = "",
			OSError = "",
			OverflowError = "",
			PendingDeprecationWarning = "",
			PermissionError = "",
			ProcessLookupError = "",
			RecursionError = "",
			ReferenceError = "",
			ResourceWarning = "",
			RuntimeError = "",
			RuntimeWarning = "",
			StopAsyncIteration = "",
			StopIteration = "",
			SyntaxError = "",
			SyntaxWarning = "",
			SystemError = "",
			SystemExit = "",
			TabError = "",
			TimeoutError = "",
			TypeError = "",
			UnboundLocalError = "",
			UnicodeDecodeError = "",
			UnicodeEncodeError = "",
			UnicodeError = "",
			UnicodeTranslateError = "",
			UnicodeWarning = "",
			UserWarning = "",
			ValueError = "",
			Warning = "",
			WindowsError = "",
			ZeroDivisionError = "",
			bool = "",
			bytearray = "",
			bytes = "",
			classmethod = "",
			complex = "",
			dict = "",
			ellipsis = "",
			enumerate = "",
			filter = "",
			float = "",
			frozenset = "",
			["function"] = "",
			int = "",
			list = "",
			map = "",
			memoryview = "",
			object = "",
			property = "",
			range = "",
			reversed = "",
			set = "",
			slice = "",
			staticmethod = "",
			str = "",
			super = "",
			tuple = "",
			type = "",
			zip = "",
		},
		Function = {
			__build_class__ = "",
			__import__ = "",
			abs = "",
			aiter = "",
			all = "",
			anext = "",
			any = "",
			ascii = "",
			bin = "",
			breakpoint = "",
			callable = "",
			chr = "",
			compile = "",
			copyright = "",
			credits = "",
			delattr = "",
			dir = "",
			divmod = "",
			eval = "",
			exec = "",
			exit = "",
			filter = "",
			format = "",
			getattr = "",
			globals = "",
			gp_probe = "",
			hasattr = "",
			hash = "",
			help = "",
			hex = "",
			id = "",
			input = "",
			isinstance = "",
			issubclass = "",
			iter = "",
			len = "",
			license = "",
			locals = "",
			map = "",
			max = "",
			min = "",
			next = "",
			oct = "",
			open = "",
			ord = "",
			pow = "",
			print = "",
			quit = "",
			repr = "",
			reversed = "",
			round = "",
			setattr = "",
			sorted = "",
			sum = "",
			vars = "",
			zip = "",
		},
		Keyword = {
			False = "",
			None = "",
			True = "",
			["and"] = "",
			assert = "",
			async = "",
			await = "",
			["break"] = "",
			case = "",
			class = "",
			continue = "",
			def = "",
			del = "",
			elif = "",
			["else"] = "",
			except = "",
			finally = "",
			["for"] = "",
			from = "",
			global = "",
			["if"] = "",
			import = "",
			["in"] = "",
			is = "",
			lambda = "",
			match = "",
			nonlocal = "",
			["not"] = "",
			["or"] = "",
			pass = "",
			raise = "",
			["return"] = "",
			try = "",
			["while"] = "",
			with = "",
			yield = "",
		},
		Variable = {
			Ellipsis = "",
			EnvironmentError = "",
			IOError = "",
			NotImplemented = "",
			__annotations__ = "",
			__builtins__ = "",
			__cached__ = "",
			__dict__ = "",
			__doc__ = "",
			__file__ = "",
			__loader__ = "",
			__name__ = "",
			__package__ = "",
			__path__ = "",
			__spec__ = "",
		},
	},
}
